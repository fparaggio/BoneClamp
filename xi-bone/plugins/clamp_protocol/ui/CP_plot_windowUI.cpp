/****************************************************************************
** Form implementation generated from reading ui file 'CP_plot_windowUI.ui'
**
** Created: Wed Sep 26 15:47:57 2012
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "CP_plot_windowUI.h"

#include <qvariant.h>
#include <qpushbutton.h>
#include <qframe.h>
#include <qlabel.h>
#include <qcombobox.h>
#include <qspinbox.h>
#include <qcheckbox.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qimage.h>
#include <qpixmap.h>

static const unsigned char image0_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x02,
    0x06, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xa5, 0x93, 0xbb, 0x6b, 0x14,
    0x51, 0x14, 0xc6, 0x7f, 0xf7, 0xee, 0xbd, 0x33, 0xb3, 0xec, 0xc6, 0x4d,
    0x56, 0x76, 0x0b, 0x15, 0x21, 0x21, 0x20, 0xd9, 0x05, 0x1b, 0x1f, 0xd1,
    0x5a, 0x2d, 0x44, 0xac, 0x24, 0xa5, 0x60, 0x21, 0x22, 0x5a, 0xd8, 0x04,
    0xc4, 0x22, 0x8d, 0x8d, 0x9d, 0x85, 0x65, 0xac, 0x44, 0xff, 0x81, 0x14,
    0x36, 0x6a, 0x63, 0x23, 0x28, 0x08, 0x22, 0x08, 0x82, 0xb0, 0x22, 0x58,
    0x88, 0xb0, 0xa2, 0x33, 0x99, 0xcd, 0xdd, 0xb9, 0x8f, 0xb1, 0x98, 0x65,
    0x82, 0x8d, 0x10, 0x72, 0xe0, 0xc0, 0x69, 0xbe, 0x07, 0xe7, 0x3b, 0x47,
    0x94, 0x65, 0xc9, 0x7e, 0x4a, 0xac, 0xad, 0xad, 0x2d, 0x01, 0xab, 0xc0,
    0xdc, 0x1e, 0xb1, 0x19, 0xf0, 0x56, 0x79, 0xef, 0xcf, 0xae, 0xaf, 0xaf,
    0xdf, 0xeb, 0xf7, 0xfb, 0x43, 0xef, 0x1d, 0xce, 0x79, 0x9c, 0xb3, 0x58,
    0xeb, 0x70, 0xce, 0x11, 0x42, 0xa0, 0x32, 0xd9, 0x40, 0x08, 0x85, 0x10,
    0x0a, 0xa5, 0x22, 0xc6, 0xe3, 0xf1, 0xa7, 0xcd, 0xcd, 0x87, 0x0f, 0x54,
    0x08, 0xe1, 0x40, 0x9e, 0xe7, 0xc3, 0xd1, 0x68, 0x44, 0x08, 0x81, 0x10,
    0x02, 0xde, 0x7b, 0xbc, 0xf7, 0xff, 0x9d, 0x43, 0x08, 0xc3, 0xad, 0xad,
    0xad, 0x96, 0xd2, 0x5a, 0x87, 0x8d, 0x8d, 0x0d, 0x7a, 0xbd, 0x1e, 0x00,
    0x65, 0x59, 0xce, 0x54, 0xcb, 0x7a, 0x0e, 0x21, 0x60, 0xad, 0xc5, 0x98,
    0x02, 0x29, 0x15, 0x4a, 0x29, 0x9c, 0xb3, 0x00, 0x28, 0xe7, 0x9c, 0xe8,
    0xf5, 0x7a, 0x0c, 0x06, 0x83, 0x5a, 0xc5, 0x39, 0xc7, 0xf4, 0xd4, 0x32,
    0xfe, 0xf5, 0x47, 0xac, 0xb5, 0xa4, 0x69, 0x46, 0x9a, 0x4e, 0xe8, 0x74,
    0xe6, 0x50, 0x2a, 0x42, 0xa9, 0x88, 0xc9, 0x24, 0xad, 0x09, 0x64, 0x59,
    0x96, 0x38, 0xe7, 0xea, 0xb6, 0xd6, 0x52, 0x1e, 0x39, 0x88, 0x31, 0x86,
    0x34, 0xdd, 0x66, 0x32, 0x29, 0xd0, 0x3a, 0x41, 0xeb, 0x0a, 0xac, 0xb5,
    0xc6, 0x5a, 0xb3, 0x4b, 0x20, 0x84, 0xa0, 0x28, 0x0a, 0xac, 0xb5, 0x75,
    0x27, 0x47, 0xfb, 0x64, 0x59, 0xce, 0x74, 0xea, 0x89, 0xe3, 0xe6, 0x0c,
    0x18, 0xcd, 0x1c, 0x68, 0xb4, 0xde, 0x06, 0x40, 0x5a, 0x6b, 0xa5, 0xf7,
    0x1e, 0x63, 0x0c, 0xee, 0xcc, 0x31, 0x8c, 0x31, 0x18, 0x53, 0xb1, 0x5b,
    0x0b, 0xed, 0xc1, 0x12, 0x87, 0x1f, 0xdd, 0x64, 0xfe, 0xd2, 0x69, 0xe2,
    0xb8, 0x49, 0x1c, 0x27, 0x44, 0x51, 0x8c, 0x52, 0xba, 0x72, 0x50, 0x14,
    0x45, 0xa3, 0x79, 0xe1, 0x24, 0x6e, 0xf5, 0x38, 0xd3, 0x2f, 0xdf, 0x69,
    0xdf, 0xbf, 0x56, 0x07, 0xdd, 0x5e, 0x59, 0x64, 0xfe, 0xd6, 0x45, 0x7e,
    0xdd, 0x7d, 0xca, 0xdc, 0x8d, 0xf3, 0xb4, 0xce, 0x5d, 0xe1, 0x50, 0x73,
    0x81, 0x13, 0x0b, 0x4b, 0x3c, 0xb9, 0x7a, 0xa7, 0x26, 0x90, 0xe2, 0xd5,
    0x7b, 0xd2, 0x0f, 0xdf, 0x08, 0x21, 0xf0, 0xfb, 0xf9, 0x1b, 0xca, 0x12,
    0x5a, 0x2b, 0xcb, 0x74, 0x6f, 0x5f, 0x26, 0xdb, 0x7c, 0x41, 0xab, 0x35,
    0x8f, 0x7f, 0xf6, 0x0e, 0x57, 0x06, 0x46, 0x02, 0x46, 0x80, 0x10, 0x62,
    0xd7, 0x41, 0x92, 0x24, 0x58, 0x6b, 0x71, 0xce, 0xe1, 0xbd, 0x27, 0x8a,
    0xda, 0x44, 0x3f, 0xa6, 0x6c, 0x3f, 0x7e, 0x49, 0xf2, 0xd3, 0xd2, 0xd0,
    0x11, 0x52, 0x36, 0xfe, 0x39, 0xc3, 0x9d, 0x9d, 0x6a, 0x07, 0x2a, 0xcf,
    0x73, 0x1d, 0x45, 0x51, 0x9d, 0x7b, 0x55, 0x9a, 0x2c, 0x1b, 0xd3, 0xf8,
    0xfc, 0x07, 0x23, 0x1b, 0x48, 0x29, 0x66, 0x8a, 0xa2, 0x26, 0x30, 0x26,
    0xa3, 0xd3, 0xe9, 0xb4, 0x45, 0xb7, 0xdb, 0xbd, 0x1e, 0x42, 0x58, 0xdc,
    0xe3, 0x1f, 0x54, 0x09, 0x48, 0xf9, 0x55, 0xec, 0xf7, 0x1b, 0xe5, 0xbe,
    0xd0, 0xc0, 0x5f, 0x88, 0xe0, 0x2d, 0x8c, 0xbc, 0xe6, 0xec, 0x4d, 0x00,
    0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image1_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0x92, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xa5, 0x93, 0x31, 0x4b, 0x23,
    0x41, 0x18, 0x86, 0x9f, 0x71, 0x3d, 0xb9, 0xc8, 0x41, 0x6e, 0x7e, 0x80,
    0xa5, 0xfe, 0x81, 0x85, 0xd8, 0xda, 0x08, 0x23, 0x84, 0xb3, 0x10, 0xc1,
    0x42, 0x14, 0x6c, 0x6c, 0x45, 0x41, 0x9b, 0x2d, 0xb7, 0xf5, 0x3f, 0x24,
    0xa6, 0xb9, 0x9f, 0xb0, 0x55, 0x7e, 0xc1, 0x2e, 0x36, 0xc2, 0x15, 0x5a,
    0x49, 0xee, 0x0e, 0x8e, 0xe0, 0x84, 0x4b, 0x2a, 0x77, 0xd6, 0xcf, 0xe2,
    0x76, 0xf6, 0x76, 0xa3, 0x95, 0x19, 0x18, 0x98, 0x99, 0xf7, 0x7b, 0x1f,
    0x3e, 0xe6, 0x9d, 0x51, 0x22, 0xc2, 0x22, 0x63, 0x69, 0x21, 0x37, 0xb0,
    0xec, 0x17, 0xdf, 0x95, 0x22, 0x00, 0x03, 0xc4, 0x40, 0x54, 0x40, 0xe2,
    0x6a, 0x45, 0xf3, 0xda, 0x41, 0xd9, 0x79, 0xbd, 0x03, 0x53, 0x40, 0xbc,
    0x7f, 0x75, 0x15, 0x16, 0xff, 0x0a, 0xcd, 0xbc, 0xf6, 0xed, 0xec, 0xec,
    0xad, 0x26, 0x22, 0x88, 0x08, 0x03, 0x48, 0x5f, 0x2e, 0x2f, 0xe5, 0xae,
    0xdb, 0x95, 0xe7, 0xf3, 0x73, 0x19, 0x40, 0x3a, 0x00, 0x53, 0xce, 0xf4,
    0xcf, 0xc9, 0x89, 0xdc, 0x75, 0xbb, 0x32, 0x3a, 0x3c, 0x94, 0x01, 0xa4,
    0xde, 0x57, 0x01, 0xfa, 0x60, 0x7a, 0x90, 0xda, 0xd3, 0x53, 0x19, 0x76,
    0x3a, 0xf2, 0xeb, 0xe8, 0x48, 0x7a, 0x90, 0xf6, 0x20, 0xfd, 0xb1, 0xbb,
    0x2b, 0xc3, 0x4e, 0x47, 0xb2, 0xed, 0x6d, 0xe9, 0x41, 0xda, 0x07, 0xe3,
    0x7d, 0xca, 0xa7, 0xd0, 0x57, 0x0a, 0x07, 0x46, 0x20, 0xde, 0xda, 0xdb,
    0x0b, 0x1f, 0xee, 0xef, 0x69, 0xb7, 0xdb, 0xcc, 0x66, 0x33, 0x7e, 0x8e,
    0x46, 0xb4, 0x5a, 0x2d, 0xa6, 0x8f, 0x8f, 0x99, 0x82, 0x68, 0x19, 0x92,
    0xe3, 0xd2, 0xd7, 0x00, 0xe4, 0x40, 0x51, 0x42, 0xd6, 0xd6, 0xd7, 0xc3,
    0xa7, 0xf1, 0x18, 0x80, 0x20, 0x08, 0xf8, 0x3b, 0x1e, 0x67, 0x0a, 0xa2,
    0x00, 0x92, 0x4f, 0x80, 0x07, 0x54, 0x29, 0xfc, 0x06, 0x56, 0xca, 0x03,
    0x05, 0xe4, 0x93, 0x09, 0xab, 0x5e, 0x2c, 0x0a, 0x72, 0x40, 0x00, 0x07,
    0x3c, 0xd7, 0x6e, 0xb7, 0xf1, 0x0e, 0x04, 0x8c, 0x83, 0x78, 0x43, 0xeb,
    0xb0, 0xe5, 0x1c, 0x5f, 0xa0, 0x9a, 0x1b, 0x5a, 0x87, 0x0e, 0x62, 0x69,
    0xa6, 0xd3, 0x8c, 0x31, 0x87, 0x78, 0x53, 0xeb, 0xd0, 0x9b, 0x6e, 0xad,
    0xcd, 0x6e, 0xad, 0xcd, 0xfc, 0x7e, 0x53, 0xeb, 0x30, 0x9f, 0x8b, 0xb1,
    0x02, 0xe4, 0x10, 0xef, 0xd4, 0xcc, 0x43, 0x6b, 0x33, 0x07, 0x91, 0x83,
    0x68, 0x58, 0x83, 0xec, 0xfc, 0x87, 0x34, 0x01, 0x53, 0x88, 0x6e, 0xac,
    0xcd, 0x3e, 0x03, 0x37, 0xd6, 0x66, 0x53, 0x88, 0x04, 0x12, 0x81, 0xe4,
    0x3d, 0xcd, 0xfb, 0xaa, 0x14, 0x2e, 0x94, 0xc2, 0x82, 0x79, 0x81, 0x78,
    0x09, 0x22, 0x0d, 0xc9, 0xd7, 0xb2, 0x68, 0x02, 0x6f, 0xb4, 0xeb, 0xf9,
    0x18, 0x3f, 0x3a, 0x16, 0xfe, 0x8d, 0xaf, 0x37, 0x9b, 0xda, 0x2f, 0xe8,
    0xb9, 0x87, 0xd2, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    0x42, 0x60, 0x82
};


/*
 *  Constructs a PlotWindowUI as a child of 'parent', with the
 *  name 'name' and widget flags set to 'f'.
 */
PlotWindowUI::PlotWindowUI( QWidget* parent, const char* name, WFlags fl )
    : QWidget( parent, name, fl )
{
    QImage img;
    img.loadFromData( image0_data, sizeof( image0_data ), "PNG" );
    image0 = img;
    img.loadFromData( image1_data, sizeof( image1_data ), "PNG" );
    image1 = img;
    if ( !name )
	setName( "PlotWindowUI" );

    frame = new QFrame( this, "frame" );
    frame->setGeometry( QRect( 40, 30, 645, 74 ) );
    frame->setFrameShape( QFrame::NoFrame );
    frame->setFrameShadow( QFrame::Plain );
    frameLayout = new QHBoxLayout( frame, 11, 6, "frameLayout"); 

    layout1 = new QGridLayout( 0, 1, 1, 0, 6, "layout1"); 

    currentScaleLabel = new QLabel( frame, "currentScaleLabel" );
    QFont currentScaleLabel_font(  currentScaleLabel->font() );
    currentScaleLabel_font.setBold( TRUE );
    currentScaleLabel->setFont( currentScaleLabel_font ); 

    layout1->addWidget( currentScaleLabel, 1, 0 );

    currentScaleEdit = new QComboBox( FALSE, frame, "currentScaleEdit" );
    currentScaleEdit->setMaximumSize( QSize( 50, 32767 ) );
    QFont currentScaleEdit_font(  currentScaleEdit->font() );
    currentScaleEdit->setFont( currentScaleEdit_font ); 

    layout1->addWidget( currentScaleEdit, 1, 3 );

    currentY2Edit = new QSpinBox( frame, "currentY2Edit" );
    currentY2Edit->setMinimumSize( QSize( 70, 0 ) );
    currentY2Edit->setMaximumSize( QSize( 70, 32767 ) );
    currentY2Edit->setMaxValue( 999999999 );
    currentY2Edit->setMinValue( -999999999 );
    currentY2Edit->setValue( 20 );

    layout1->addWidget( currentY2Edit, 1, 2 );

    timeScaleEdit = new QComboBox( FALSE, frame, "timeScaleEdit" );
    timeScaleEdit->setMaximumSize( QSize( 50, 32767 ) );
    QFont timeScaleEdit_font(  timeScaleEdit->font() );
    timeScaleEdit->setFont( timeScaleEdit_font ); 

    layout1->addWidget( timeScaleEdit, 0, 3 );

    timeX2Edit = new QSpinBox( frame, "timeX2Edit" );
    timeX2Edit->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)0, 0, 0, timeX2Edit->sizePolicy().hasHeightForWidth() ) );
    timeX2Edit->setMinimumSize( QSize( 70, 0 ) );
    timeX2Edit->setMaximumSize( QSize( 70, 32767 ) );
    timeX2Edit->setMaxValue( 999999999 );
    timeX2Edit->setValue( 1000 );

    layout1->addWidget( timeX2Edit, 0, 2 );

    currentY1Edit = new QSpinBox( frame, "currentY1Edit" );
    currentY1Edit->setMinimumSize( QSize( 70, 0 ) );
    currentY1Edit->setMaximumSize( QSize( 70, 32767 ) );
    currentY1Edit->setMaxValue( 999999999 );
    currentY1Edit->setMinValue( -999999999 );
    currentY1Edit->setValue( -20 );

    layout1->addWidget( currentY1Edit, 1, 1 );

    timeScaleLabel = new QLabel( frame, "timeScaleLabel" );
    QFont timeScaleLabel_font(  timeScaleLabel->font() );
    timeScaleLabel_font.setBold( TRUE );
    timeScaleLabel->setFont( timeScaleLabel_font ); 

    layout1->addWidget( timeScaleLabel, 0, 0 );

    timeX1Edit = new QSpinBox( frame, "timeX1Edit" );
    timeX1Edit->setMinimumSize( QSize( 70, 0 ) );
    timeX1Edit->setMaximumSize( QSize( 70, 32767 ) );
    timeX1Edit->setMaxValue( 999999999 );

    layout1->addWidget( timeX1Edit, 0, 1 );
    frameLayout->addLayout( layout1 );

    setAxesButton = new QPushButton( frame, "setAxesButton" );
    setAxesButton->setEnabled( TRUE );
    setAxesButton->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, setAxesButton->sizePolicy().hasHeightForWidth() ) );
    setAxesButton->setMinimumSize( QSize( 40, 40 ) );
    setAxesButton->setMaximumSize( QSize( 40, 40 ) );
    QFont setAxesButton_font(  setAxesButton->font() );
    setAxesButton->setFont( setAxesButton_font ); 
    setAxesButton->setPixmap( image0 );
    setAxesButton->setToggleButton( FALSE );
    setAxesButton->setFlat( FALSE );
    frameLayout->addWidget( setAxesButton );

    layout2 = new QVBoxLayout( 0, 0, 6, "layout2"); 

    overlaySweepsCheckBox = new QCheckBox( frame, "overlaySweepsCheckBox" );
    overlaySweepsCheckBox->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)1, 0, 0, overlaySweepsCheckBox->sizePolicy().hasHeightForWidth() ) );
    QFont overlaySweepsCheckBox_font(  overlaySweepsCheckBox->font() );
    overlaySweepsCheckBox_font.setBold( TRUE );
    overlaySweepsCheckBox->setFont( overlaySweepsCheckBox_font ); 
    layout2->addWidget( overlaySweepsCheckBox );

    plotAfterCheckBox = new QCheckBox( frame, "plotAfterCheckBox" );
    plotAfterCheckBox->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)1, 0, 0, plotAfterCheckBox->sizePolicy().hasHeightForWidth() ) );
    QFont plotAfterCheckBox_font(  plotAfterCheckBox->font() );
    plotAfterCheckBox_font.setBold( TRUE );
    plotAfterCheckBox->setFont( plotAfterCheckBox_font ); 
    layout2->addWidget( plotAfterCheckBox );
    frameLayout->addLayout( layout2 );

    layout3 = new QVBoxLayout( 0, 0, 6, "layout3"); 

    textLabel1 = new QLabel( frame, "textLabel1" );
    QFont textLabel1_font(  textLabel1->font() );
    textLabel1_font.setBold( TRUE );
    textLabel1->setFont( textLabel1_font ); 
    layout3->addWidget( textLabel1 );

    colorByComboBox = new QComboBox( FALSE, frame, "colorByComboBox" );
    QFont colorByComboBox_font(  colorByComboBox->font() );
    colorByComboBox->setFont( colorByComboBox_font ); 
    layout3->addWidget( colorByComboBox );
    frameLayout->addLayout( layout3 );
    spacer = new QSpacerItem( 1, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    frameLayout->addItem( spacer );

    clearButton = new QPushButton( frame, "clearButton" );
    clearButton->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, clearButton->sizePolicy().hasHeightForWidth() ) );
    clearButton->setMinimumSize( QSize( 40, 40 ) );
    clearButton->setMaximumSize( QSize( 40, 40 ) );
    QFont clearButton_font(  clearButton->font() );
    clearButton->setFont( clearButton_font ); 
    clearButton->setPixmap( image1 );
    clearButton->setToggleButton( FALSE );
    frameLayout->addWidget( clearButton );
    languageChange();
    resize( QSize(938, 215).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );
}

/*
 *  Destroys the object and frees any allocated resources
 */
PlotWindowUI::~PlotWindowUI()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void PlotWindowUI::languageChange()
{
    setCaption( tr( "Clamp Protocol Plot Window" ) );
    currentScaleLabel->setText( tr( "Current" ) );
    QToolTip::add( currentScaleLabel, tr( "Current Scale" ) );
    currentScaleEdit->clear();
    currentScaleEdit->insertItem( trUtf8( "\xce\xbc\x41" ) );
    currentScaleEdit->insertItem( tr( "nA" ) );
    currentScaleEdit->insertItem( tr( "pA" ) );
    currentScaleEdit->setCurrentItem( 1 );
    timeScaleEdit->clear();
    timeScaleEdit->insertItem( tr( "s" ) );
    timeScaleEdit->insertItem( tr( "ms" ) );
    timeScaleEdit->insertItem( trUtf8( "\xce\xbc\x73" ) );
    timeScaleEdit->insertItem( tr( "ns" ) );
    timeScaleEdit->setCurrentItem( 1 );
    timeScaleLabel->setText( tr( "Time" ) );
    QToolTip::add( timeScaleLabel, tr( "Time Scale" ) );
    setAxesButton->setText( QString::null );
    QToolTip::add( setAxesButton, tr( "Set axes to desired scale" ) );
    overlaySweepsCheckBox->setText( tr( "Overlay Sweeps" ) );
    QToolTip::add( overlaySweepsCheckBox, tr( "Check to overlay all sweeps in a particular segment" ) );
    plotAfterCheckBox->setText( tr( "Plot after protocol" ) );
    QToolTip::add( plotAfterCheckBox, tr( "Check to plot only at the end of a protocol instead of after each step in a protocol" ) );
    textLabel1->setText( tr( "Color by:" ) );
    QToolTip::add( textLabel1, tr( "Change the color scheme of the plot" ) );
    colorByComboBox->clear();
    colorByComboBox->insertItem( tr( "Run" ) );
    colorByComboBox->insertItem( tr( "Trial" ) );
    colorByComboBox->insertItem( tr( "Sweep" ) );
    QToolTip::add( colorByComboBox, QString::null );
    clearButton->setText( QString::null );
    QToolTip::add( clearButton, tr( "Clear plot" ) );
}

