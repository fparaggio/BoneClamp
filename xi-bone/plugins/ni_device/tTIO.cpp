// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// This file is autogenerated!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#ifndef ___tTIO_h___
#include "tTIO.h"

#endif

tTIO::tTIO(tBusSpaceReference addrSpace, nMDBG::tStatus2* s)

{
   _addressOffset = 0;
   _addrSpace = addrSpace;
   _deallocateBus = kFalse;

   if (s && s->isFatal()) return;
   _initialize(s);
}


void tTIO::reset(nMDBG::tStatus2* s)
{
   if (s && s->isFatal()) return;

   G0_AutoIncrement.setRegister(0x0, s);
   G0_Command.setRegister(0x0, s);
   G0_Counting_Mode.setRegister(0x0, s);
   G0_MSeries_Counting_Mode.setRegister(0x0, s);
   G0_DMA_Control.setRegister(0x0, s);
   G0_Input_Select.setRegister(0x0, s);
   G0_Load_A.setRegister(0x0, s);
   G0_Load_B.setRegister(0x0, s);
   G0_Mode.setRegister(0x0, s);
   G0_Second_Gate.setRegister(0x0, s);
   G0_MSeries_ABZ.setRegister(0x0, s);
   G01_Joint_Reset.setRegister(0x0, s);
   G1_AutoIncrement.setRegister(0x0, s);
   G1_Command.setRegister(0x0, s);
   G1_Counting_Mode.setRegister(0x0, s);
   G1_MSeries_Counting_Mode.setRegister(0x0, s);
   G1_DMA_Control.setRegister(0x0, s);
   G1_Input_Select.setRegister(0x0, s);
   G1_Load_A.setRegister(0x0, s);
   G1_Load_B.setRegister(0x0, s);
   G1_Mode.setRegister(0x0, s);
   G1_Second_Gate.setRegister(0x0, s);
   G1_MSeries_ABZ.setRegister(0x0, s);
   Interrupt_G0_Ack.setRegister(0x0, s);
   Interrupt_G0_Enable.setRegister(0x0, s);
   Interrupt_G1_Ack.setRegister(0x0, s);
   Interrupt_G1_Enable.setRegister(0x0, s);
   G0_DMA_Status.setRegister(0x0, s);
   G0_HW_Save.setRegister(0x0, s);
   G0_HW_Save_High.setRegister(0x0, s);
   G0_HW_Save_Low.setRegister(0x0, s);
   G0_Save.setRegister(0x0, s);
   G0_Save_High.setRegister(0x0, s);
   G0_Save_Low.setRegister(0x0, s);
   G0_Status_1.setRegister(0x0, s);
   G01_Joint_Status_1.setRegister(0x0, s);
   G01_Joint_Status_2.setRegister(0x0, s);
   G01_Status.setRegister(0x0, s);
   G1_DMA_Status.setRegister(0x0, s);
   G1_HW_Save.setRegister(0x0, s);
   G1_HW_Save_High.setRegister(0x0, s);
   G1_HW_Save_Low.setRegister(0x0, s);
   G1_Save.setRegister(0x0, s);
   G1_Save_High.setRegister(0x0, s);
   G1_Save_Low.setRegister(0x0, s);
   G1_Status_1.setRegister(0x0, s);
}

void tTIO::_initialize(nMDBG::tStatus2* s)
{
   if (s && s->isFatal()) return;



   //----------------------------------------
   // set register maps of all registers
   //----------------------------------------
   G0_AutoIncrement.setRegisterMap(this);
   G0_Command.setRegisterMap(this);
   G0_Counting_Mode.setRegisterMap(this);
   G0_MSeries_Counting_Mode.setRegisterMap(this);
   G0_DMA_Control.setRegisterMap(this);
   G0_Input_Select.setRegisterMap(this);
   G0_Load_A.setRegisterMap(this);
   G0_Load_B.setRegisterMap(this);
   G0_Mode.setRegisterMap(this);
   G0_Second_Gate.setRegisterMap(this);
   G0_MSeries_ABZ.setRegisterMap(this);
   G01_Joint_Reset.setRegisterMap(this);
   G1_AutoIncrement.setRegisterMap(this);
   G1_Command.setRegisterMap(this);
   G1_Counting_Mode.setRegisterMap(this);
   G1_MSeries_Counting_Mode.setRegisterMap(this);
   G1_DMA_Control.setRegisterMap(this);
   G1_Input_Select.setRegisterMap(this);
   G1_Load_A.setRegisterMap(this);
   G1_Load_B.setRegisterMap(this);
   G1_Mode.setRegisterMap(this);
   G1_Second_Gate.setRegisterMap(this);
   G1_MSeries_ABZ.setRegisterMap(this);
   Interrupt_G0_Ack.setRegisterMap(this);
   Interrupt_G0_Enable.setRegisterMap(this);
   Interrupt_G1_Ack.setRegisterMap(this);
   Interrupt_G1_Enable.setRegisterMap(this);
   G0_DMA_Status.setRegisterMap(this);
   G0_HW_Save.setRegisterMap(this);
   G0_HW_Save_High.setRegisterMap(this);
   G0_HW_Save_Low.setRegisterMap(this);
   G0_Save.setRegisterMap(this);
   G0_Save_High.setRegisterMap(this);
   G0_Save_Low.setRegisterMap(this);
   G0_Status_1.setRegisterMap(this);
   G01_Joint_Status_1.setRegisterMap(this);
   G01_Joint_Status_2.setRegisterMap(this);
   G01_Status.setRegisterMap(this);
   G1_DMA_Status.setRegisterMap(this);
   G1_HW_Save.setRegisterMap(this);
   G1_HW_Save_High.setRegisterMap(this);
   G1_HW_Save_Low.setRegisterMap(this);
   G1_Save.setRegisterMap(this);
   G1_Save_High.setRegisterMap(this);
   G1_Save_Low.setRegisterMap(this);
   G1_Status_1.setRegisterMap(this);

   reset(s);
}

tTIO::~tTIO()
{
}



// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// This file is autogenerated!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!

